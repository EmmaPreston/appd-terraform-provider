name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v -o terraform-provider-appd

    - uses: actions/upload-artifact@v2
      with:
        name: terraform-provider-appd-linux
        path: terraform-provider-appd

    - name: Get Release ID
      id: getid
      run:   |
        rel_id=$(curl -sL https://api.github.com/repos/${{github.repository}}/releases/tags/latest?access_token=${{ secrets.GITHUB_TOKEN }} | jq -r '.id')
        echo ::set-output name=rel_id::$rel_id
    - name: Remove Release Asset
      uses: flcdrg/remove-release-asset-action@v1.0.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.getid.outputs.rel_id }}
        asset_name: terraform-provider-appd.linux.zip

    - name: Zip
      run: zip  terraform-provider-appd.zip ./terraform-provider-appd

    - uses: actions/upload-artifact@v2
      with:
        name: terraform-provider-appd.linux.zip
        path: terraform-provider-appd.zip

    - name: Get upload URL
      id: geturl
      run:   |
        upload_url=$(curl -sL https://api.github.com/repos/${{github.repository}}/releases/tags/latest?access_token=${{ secrets.GITHUB_TOKEN }} | jq -r '.upload_url')
        echo ::set-output name=upload_url::$upload_url
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.geturl.outputs.upload_url }}
        asset_path: ./terraform-provider-appd.zip
        asset_name: terraform-provider-appd.linux.zip
        asset_content_type: application/zip


  build-mac:
    name: Build Mac
    runs-on: ubuntu-latest
    env:
      GOOS: darwin
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: go build -v -o terraform-provider-appd

      - uses: actions/upload-artifact@v2
        with:
          name: terraform-provider-appd-mac
          path: terraform-provider-appd

      - name: Zip
        run: zip  terraform-provider-appd.zip ./terraform-provider-appd

      - uses: actions/upload-artifact@v2
        with:
          name: terraform-provider-appd.mac.zip
          path: terraform-provider-appd.zip

      - name: Get Release ID
        id: getid
        run:   |
          rel_id=$(curl -sL https://api.github.com/repos/${{github.repository}}/releases/tags/latest?access_token=${{ secrets.GITHUB_TOKEN }} | jq -r '.id')
          echo ::set-output name=rel_id::$rel_id
      - name: Remove Release Asset
        uses: flcdrg/remove-release-asset-action@v1.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.getid.outputs.rel_id }}
          asset_name: terraform-provider-appd.mac.zip

      - name: Get upload URL
        id: geturl
        run:   |
          upload_url=$(curl -sL https://api.github.com/repos/${{github.repository}}/releases/tags/latest?access_token=${{ secrets.GITHUB_TOKEN }} | jq -r '.upload_url')
          echo ::set-output name=upload_url::$upload_url
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.geturl.outputs.upload_url }}
          asset_path: ./terraform-provider-appd.zip
          asset_name: terraform-provider-appd.mac.zip
          asset_content_type: application/zip