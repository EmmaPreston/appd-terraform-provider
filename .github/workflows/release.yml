name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  test-cross-compile-and-release:
    name: Test Cross Compile and Release
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Test
      run: make test

    - name: Build
      run: make build

    - uses: actions/upload-artifact@v2
      with:
        name: terraform-provider-appd-linux
        path: terraform-provider-appd

    - name: Zip
      run: zip  terraform-provider-appd.linux.zip ./terraform-provider-appd

    - uses: actions/upload-artifact@v2
      with:
        name: terraform-provider-appd.linux.zip
        path: terraform-provider-appd.linux.zip

    - name: Get dependencies (Mac)
      env:
        GOOS: darwin
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build (Mac)
      env:
        GOOS: darwin
      run: make build

    - uses: actions/upload-artifact@v2
      with:
        name: terraform-provider-appd-mac
        path: terraform-provider-appd

    - name: Zip (Mac)
      run: zip  terraform-provider-appd.mac.zip ./terraform-provider-appd

    - uses: actions/upload-artifact@v2
      with:
        name: terraform-provider-appd.mac.zip
        path: terraform-provider-appd.mac.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Changes in Release ${{ github.ref }}
          -
        draft: false
        prerelease: false

    - name: Upload Linux Build to Release
      id: upload-release-asset-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./terraform-provider-appd.linux.zip
        asset_name: terraform-provider-appd.linux.zip
        asset_content_type: application/zip

    - name: Upload Max Build to Release
      id: upload-release-asset-mac
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./terraform-provider-appd.mac.zip
        asset_name: terraform-provider-appd.mac.zip
        asset_content_type: application/zip
